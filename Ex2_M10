import json


class Person:
    def __init__(self, name, age, address):
        self.name = name
        self.age = age
        self.address = address

    def display_person_info(self):
        print(f"Name: {self.name}, Age: {self.age}, Address: {self.address}")


class Student(Person):
    def __init__(self, name, age, address, student_id):
        super().__init__(name, age, address)
        self.student_id = student_id
        self.grades = {}
        self.courses = []


    def add_grade(self, subject, grade):

        self.courses=subject
        if subject in self.courses:

           self.grades[subject]=grade
        else:
            print(f"Student {self.name} is not enrolled in {subject}.")

    def enroll_course(self, course):

        if course not in self.courses:
            self.courses.append(course)

    def display_student_info(self):

        print(f"Student Information:\nName: {self.name}\nID: {self.student_id}\n"
              f"Age: {self.age}\nAddress: {self.address}\n"
        f"Enrolled Courses:{self.courses} \n"f"Grades:{self.grades}")

class Course:
    def __init__(self, course_name, course_code, instructor):
        self.course_name = course_name
        self.course_code = course_code
        self.instructor = instructor
        self.students = []

    def add_student(self, student):
        if student not in self.students:
            self.students.append(student)
            student.enroll_course(self.course_name)

    def display_course_info(self):
        print(f"Course Information:\nCourse Name: {self.course_name}\nCode: {self.course_code}\n"
              f"Instructor: {self.instructor}\nEnrolled Students: {', '.join([s.name for s in self.students])}")


class StudentManagementSystem:
    def __init__(self):
        self.students = {}
        self.courses = {}

    def add_student(self, name, age, address, student_id):
        new_student = Student(name, age, address, student_id)
        self.students[student_id] = new_student
        print(f"Student {name} (ID: {student_id}) added successfully.")

    def add_course(self, course_name, course_code, instructor):
        new_course = Course(course_name, course_code, instructor)
        self.courses[course_code] = new_course
        print(f"Course {course_name} (Code: {course_code}) created with instructor {instructor}.")

    def enroll_student_in_course(self, student_id, course_code):
        if student_id in self.students and course_code in self.courses:
            student = self.students[student_id]
            course = self.courses[course_code]
            course.add_student(student)
            print(f"Student {student.name} (ID: {student_id}) enrolled in {course.course_name} (Code: {course_code}).")
        else:
            print("Either student ID or course code does not exist.")

    def add_grade(self, student_id, course_code, grade):
        if student_id in self.students:
            student = self.students[student_id]
            if course_code in self.courses:
                student.add_grade(course_code, grade)
                print(f"Grade {grade} added for {student.name} in {course_code}.")
            else:
                print("Course code does not exist.")
        else:
            print("Student ID does not exist.")

    def display_student_details(self, student_id):
        if student_id in self.students:
            self.students[student_id].display_student_info()
        else:
            print("Student ID does not exist.")

    def display_course_details(self, course_code):
        if course_code in self.courses:
            self.courses[course_code].display_course_info()
        else:
            print("Course code does not exist.")

    def save_data(self, filename="data.json"):
        data = {
            'students': {sid: {'name': s.name, 'age': s.age, 'address': s.address,
                               'courses': s.courses, 'grades': s.grades}
                         for sid, s in self.students.items()},
            'courses': {cid: {'course_name': c.course_name, 'instructor': c.instructor,
                              'students': [s.student_id for s in c.students]}
                        for cid, c in self.courses.items()}
        }
        with open(filename, 'w') as f:
            json.dump(data, f)
        print("All student and course data saved successfully.")

    def load_data(self, filename="data.json"):
        try:
            with open(filename, 'r') as f:
                data = json.load(f)

            for sid, student_data in data['students'].items():
                student = Student(student_data['name'], student_data['age'], student_data['address'], sid)
                student.courses = student_data['courses']
                student.grades = student_data['grades']
                self.students[sid] = student

            for cid, course_data in data['courses'].items():
                course = Course(course_data['course_name'], cid, course_data['instructor'])
                for sid in course_data['students']:
                    if sid in self.students:
                        course.add_student(self.students[sid])
                self.courses[cid] = course

            print("Data loaded successfully.")
        except FileNotFoundError:
            print("No data file found to load.")


def main():
    system = StudentManagementSystem()

    while True:
        print("==== Student Management System ====")
        print("1. Add New Student")
        print("2. Add New Course")
        print("3. Enroll Student in Course")
        print("4. Add Grade for Student")
        print("5. Display Student Details")
        print("6. Display Course Details")
        print("7. Save Data to File")
        print("8. Load Data from File")
        print("0. Exit")

        option = input("Select Option: ")

        if option == '1':
            name = input("Enter Name: ")
            age = int(input("Enter Age: "))
            address = input("Enter Address: ")
            student_id = input("Enter Student ID: ")
            system.add_student(name, age, address, student_id)
        elif option == '2':
            course_name = input("Enter Course Name: ")
            course_code = input("Enter Course Code: ")
            instructor = input("Enter Instructor Name: ")
            system.add_course(course_name, course_code, instructor)
        elif option == '3':
            student_id = input("Enter Student ID: ")
            course_code = input("Enter Course Code: ")
            system.enroll_student_in_course(student_id, course_code)
        elif option == '4':
            student_id = input("Enter Student ID: ")
            course_code = input("Enter Course Code: ")
            grade = input("Enter Grade: ")
            system.add_grade(student_id, course_code, grade)
        elif option == '5':
            student_id = input("Enter Student ID: ")
            system.display_student_details(student_id)
        elif option == '6':
            course_code = input("Enter Course Code: ")
            system.display_course_details(course_code)
        elif option == '7':
            system.save_data()
        elif option == '8':
            system.load_data()
        elif option == '0':
            print("Exiting Student Management System. Goodbye!")
            break
        else:
            print("Invalid option, please try again.")


if __name__ == '__main__':
    main()
